name: installations

on:
  pull_request:
    paths:
    - 'FirebaseInstallations**'
    - '.github/workflows/installations.yml'
    - 'Gemfile*'
  schedule:
    # Run every day at 10pm (PST) - cron uses UTC times
    - cron:  '0 6 * * *'

jobs:
  pod-lib-lint:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    runs-on: macos-11
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    strategy:
      matrix:
        target: [ios, tvos, macos]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Configure test keychain
      run: scripts/configure_test_keychain.sh
    - name: Install GoogleService-Info.plist
      run: |
        mkdir -p FirebaseInstallations/Source/Tests/Resources
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/Installations/GoogleService-Info.plist.gpg \
          FirebaseInstallations/Source/Tests/Resources/GoogleService-Info.plist "$plist_secret"
    - name: Get boolean for secrets available
      id: secrets
      run: echo "::set-output name=val::$([[ -z $plist_secret ]] && echo "0" || echo "1")"
    - name: Build and test
      run: |
       export FIS_INTEGRATION_TESTS_REQUIRED=${{ steps.secrets.outputs.val }}
       scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseInstallations.podspec \
         --platforms=${{ matrix.target }}
  spm:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: iOS Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh FirebaseInstallations iOS spmbuildonly

  spm-cron:
    # Don't run on private repo.
    if: github.event_name == 'schedule' && github.repository == 'Firebase/firebase-ios-sdk'
    runs-on: macos-11
    strategy:
      matrix:
        target: [tvOS, macOS, catalyst]
    steps:
    - uses: actions/checkout@v2
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh FirebaseInstallations ${{ matrix.target }} spmbuildonly

  catalyst:
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Setup project and Build for Catalyst
      run: scripts/test_catalyst.sh FirebaseInstallations test FirebaseInstallations-Unit-unit

  quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'

    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Setup quickstart
      run: scripts/setup_quickstart.sh installations
    - name: Copy mock plist
      run: cp quickstart-ios/mock-GoogleService-Info.plist quickstart-ios/installations/GoogleService-Info.plist
    - name: Test objc quickstart
      run: scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Installations true
    - name: Test swift quickstart
      run: scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Installations true swift

  installations-cron-only:
    if: github.event_name == 'schedule' && github.repository == 'Firebase/firebase-ios-sdk'

    runs-on: macos-11
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      FIR_IID_INTEGRATION_TESTS_REQUIRED: ${{ secrets.GHASecretsGPGPassphrase1 }}
    strategy:
      matrix:
        target: [ios, tvos, macos]
        flags: [
          '--use-static-frameworks',
          '--use-libraries --skip-tests'
        ]
    needs: pod-lib-lint
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Configure test keychain
      run: scripts/configure_test_keychain.sh
    - name: Install GoogleService-Info.plist
      run: |
        mkdir -p FirebaseInstallations/Source/Tests/Resources
        scripts/decrypt_gha_secret.sh scripts/gha-encrypted/Installations/GoogleService-Info.plist.gpg \
          FirebaseInstallations/Source/Tests/Resources/GoogleService-Info.plist "$plist_secret"
    - name: Get boolean for secrets available
      id: secrets
      run: echo "::set-output name=val::$([[ -z $plist_secret ]] && echo "0" || echo "1")"
    - name: PodLibLint Installations Cron
      run: |
       export FIS_INTEGRATION_TESTS_REQUIRED=${{ steps.secrets.outputs.val }}
       scripts/third_party/travis/retry.sh scripts/pod_lib_lint.rb FirebaseInstallations.podspec \
         --platforms=${{ matrix.target }} ${{ matrix.flags }} \

  podspec-presubmit:
    # Don't run on private repo unless it is a PR.
    if: github.repository == 'Firebase/firebase-ios-sdk' && github.event.pull_request.merged != true && github.event.action != 'closed'
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Setup Bundler
      run: scripts/setup_bundler.sh
    - name: Build and test
      run: scripts/third_party/travis/retry.sh pod spec lint FirebaseInstallations.podspec --skip-tests --sources='https://github.com/firebase/SpecsTesting','https://github.com/firebase/SpecsDev.git','https://github.com/firebase/SpecsStaging.git','https://cdn.cocoapods.org/'
