name: release

on:
  pull_request:
    paths:
    - 'scripts/release_testing_setup.sh'
    - '.github/workflows/release.yml'
  workflow_dispatch:
  schedule:
    # Run every day at 11pm (PST) - cron uses UTC times
    - cron:  '0 7 * * *'

jobs:
  buildup_SpecsTesting_repo:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    env:
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      local_repo: specstesting
      # The SDK repo will be cloned to this dir and podspecs from
      # the latest release branch of this repo will be validated and pushed to
      # the testing repo.
      local_sdk_repo_dir: /tmp/test/firebase-ios-sdk
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: |
         scripts/decrypt_gha_secret.sh scripts/gha-encrypted/oss-bot-access.txt.gpg \
         oss-bot-access.txt "$bot_token_secret"
         scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
         bot-access.txt "$bot_token_secret"
    - name: Update SpecsTesting repo setup
      run: |
         ossbotaccess=`cat oss-bot-access.txt`
         BOT_TOKEN="${ossbotaccess}" scripts/release_testing_setup.sh release_testing
    - name: Update SpecsTesting repo
      run: |
        botaccess=`cat bot-access.txt`
        cd scripts/create_spec_repo/
        swift build
        pod repo add --silent "${local_repo}" https://"$botaccess"@github.com/FirebasePrivate/SpecsTesting.git
        BOT_TOKEN="${botaccess}"  .build/debug/spec-repo-builder --sdk-repo "${local_sdk_repo_dir}" --local-spec-repo-name "${local_repo}" --pod-sources 'https://${BOT_TOKEN}@github.com/FirebasePrivate/SpecsTesting' "https://github.com/firebase/SpecsStaging.git" "https://cdn.cocoapods.org/" --exclude-pods "FirebaseSegmentation" "FirebaseFirestoreTestingSupport" "FirebaseAuthTestingSupport" "FirebaseCombineSwift" "FirebaseFunctionsTestingSupport"
    - name: Clean Artifacts
      if: ${{ always() }}
      run: |
        pod repo remove "${local_repo}"
        rm -rf bot-access.txt

  abtesting_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      env:
        LEGACY: true
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh abtesting nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-abtesting.plist.gpg \
          quickstart-ios/abtesting/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test swift quickstart
      env:
        LEGACY: true
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh ABTesting true)
    - name: Remove data before upload
      env:
        LEGACY: true
      run: scripts/remove_data.sh config release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_abtesting
        path: quickstart-ios/

  auth_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh Authentication nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-auth.plist.gpg \
          quickstart-ios/authentication/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Authentication false)
    - name: Remove data before upload
      run: scripts/remove_data.sh authentication release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_auth
        path: quickstart-ios/

  crashlytics_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      env:
        LEGACY: true
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh Crashlytics nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-crashlytics.plist.gpg \
          quickstart-ios/crashlytics/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      env:
        LEGACY: true
      run: |
        mkdir -p quickstart-ios/crashlytics/LegacyCrashlyticsQuickstart/Pods/FirebaseCrashlytics
        # Set the deployed pod location of run and upload-symbols with the development pod version.
        cp Crashlytics/run quickstart-ios/crashlytics/LegacyCrashlyticsQuickstart/Pods/FirebaseCrashlytics/
        cp Crashlytics/upload-symbols quickstart-ios/crashlytics/LegacyCrashlyticsQuickstart/Pods/FirebaseCrashlytics/
        ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Crashlytics true)
    - name: Test swift quickstart
      env:
        LEGACY: true
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Crashlytics true swift)
    - name: Remove data before upload
      env:
        LEGACY: true
      run: scripts/remove_data.sh crashlytics release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_crashlytics
        path: quickstart-ios/

  database_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh database nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-database.plist.gpg \
          quickstart-ios/database/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Database false)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Database false swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh database release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_database
        path: quickstart-ios/

  dynamiclinks_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh dynamiclinks nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-dynamiclinks.plist.gpg \
          quickstart-ios/dynamiclinks/GoogleService-Info.plist "$plist_secret"
    - name: Update Environment Variable For DynamicLinks
      run: |
        sed -i '' 's#DYNAMIC_LINK_DOMAIN#https://qpf6m.app.goo.gl#' quickstart-ios/dynamiclinks/DynamicLinksExample/DynamicLinksExample.entitlements
        sed -i '' 's#YOUR_DOMAIN_URI_PREFIX";#https://qpf6m.app.goo.gl";#' quickstart-ios/dynamiclinks/DynamicLinksExample/ViewController.m
        sed -i '' 's#YOUR_DOMAIN_URI_PREFIX";#https://qpf6m.app.goo.gl";#' quickstart-ios/dynamiclinks/DynamicLinksExampleSwift/ViewController.swift
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh DynamicLinks true)
    - name: Test swift quickstart
      if: ${{ always() }}
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh DynamicLinks true swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh dynamiclinks release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_dynamiclinks
        path: quickstart-ios/

  firestore_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh firestore nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-firestore.plist.gpg \
          quickstart-ios/firestore/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Firestore false)
    - name: Remove data before upload
      run: scripts/remove_data.sh firestore release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_firestore
        path: quickstart-ios/

  functions_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh functions nightly_release_testing
    - name: install secret googleservice-info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-functions.plist.gpg \
          quickstart-ios/functions/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Setup custom URL scheme
      run: sed -i '' 's/REVERSED_CLIENT_ID/com.googleusercontent.apps.1025801074639-6p6ebi8amuklcjrto20gvpe295smm8u6/' quickstart-ios/functions/FunctionsExample/Info.plist
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Functions true)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Functions true swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh functions release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_functions
        path: quickstart-ios/

  inappmessaging_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh inappmessaging nightly_release_testing
    - name: install secret googleservice-info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-inappmessaging.plist.gpg \
          quickstart-ios/inappmessaging/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh InAppMessaging true)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh InAppMessaging true swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh inappmessaging release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_inappmessaging
        path: quickstart-ios/

  messaging_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh messaging nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-messaging.plist.gpg \
          quickstart-ios/messaging/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Messaging false)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] ||
            scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Messaging false swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh messaging release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_messaging
        path: quickstart-ios/

  remoteconfig_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh config nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-config.plist.gpg \
          quickstart-ios/config/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test Swift Quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Config true)
    - name: Remove data before upload
      run: scripts/remove_data.sh config release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_config
        path: quickstart-ios/

  storage_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh storage nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-storage.plist.gpg \
          quickstart-ios/storage/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Storage true)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Storage true swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh storage release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_storage
        path: quickstart-ios/

  performance_quickstart:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    needs: buildup_SpecsTesting_repo
    env:
      plist_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      signin_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      bot_token_secret: ${{ secrets.GHASecretsGPGPassphrase1 }}
      testing_repo_dir: "/tmp/test/"
      testing_repo: "firebase-ios-sdk"
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: Get token
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/bot-access.txt.gpg \
          bot-access.txt "$bot_token_secret"
    - name: Setup testing repo and quickstart
      run: |
          botaccess=`cat bot-access.txt`
          BOT_TOKEN="${botaccess}" scripts/setup_quickstart.sh Performance nightly_release_testing
    - name: Install Secret GoogleService-Info.plist
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/qs-performance.plist.gpg \
          quickstart-ios/performance/GoogleService-Info.plist "$plist_secret"
    - name: Install Secret FIREGSignInInfo.h
      run: scripts/decrypt_gha_secret.sh scripts/gha-encrypted/FIREGSignInInfo.h.gpg \
          quickstart-ios/TestUtils/FIREGSignInInfo.h "$signin_secret"
    - name: Test objc quickstart
      run: |
        ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Performance true)
    - name: Test swift quickstart
      run: ([ -z $plist_secret ] || scripts/third_party/travis/retry.sh scripts/test_quickstart.sh Performance true swift)
    - name: Remove data before upload
      run: scripts/remove_data.sh performance release_testing
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: quickstart_artifacts_performance
        path: quickstart-ios/
